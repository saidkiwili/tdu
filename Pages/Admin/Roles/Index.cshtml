@page
@model IndexModel
@{
    ViewData["Title"] = "Roles Management";
    Layout = "_AdminLayout";
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-2">Roles Management</h1>
            <p class="text-gray-600">Manage system roles and their permissions</p>
        </div>

        <!-- Success/Error Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="mb-4 bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-lg">
                @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="mb-4 bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
                @TempData["ErrorMessage"]
            </div>
        }

        <!-- Action Bar -->
        <div class="bg-white rounded-lg shadow-sm border p-4 mb-6">
            <div class="flex justify-between items-center">
                <div class="flex items-center space-x-4">
                    <form method="get" class="flex items-center space-x-2">
                        <input name="search" value="@Request.Query["search"]" type="text" placeholder="Search roles..." 
                               class="border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-green-500 focus:border-transparent">
                        <button type="submit" class="btn-secondary">
                            <i class="fas fa-search mr-2"></i>Search
                        </button>
                    </form>
                </div>
                @if (Model.CanCreate)
                {
                    <a href="/Admin/Roles/Create" class="btn-primary inline-flex items-center"><i class="fas fa-plus mr-2"></i>Create Role</a>
                }
                else
                {
                    <button class="btn-primary" disabled title="You don't have permission"><i class="fas fa-plus mr-2"></i>Create Role</button>
                }
            </div>
        </div>

        <!-- Roles Table -->
        <div class="bg-white rounded-lg shadow-sm border overflow-hidden">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role Name</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Users Count</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Permissions</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
                        <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var role in Model.Roles)
                    {
                        <tr class="hover:bg-gray-50">
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <div class="w-10 h-10 bg-gradient-to-r from-green-400 to-blue-500 rounded-lg flex items-center justify-center text-white font-semibold">
                                        @role.Name?.Substring(0, 1).ToUpper()
                                    </div>
                                    <div class="ml-4">
                                        <div class="text-sm font-medium text-gray-900">@role.Name</div>
                                        <div class="text-sm text-gray-500">ID: @role.Id?.Substring(0, 8)...</div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                    @role.UserCount users
                                </span>
                            </td>
                            <td class="px-6 py-4">
                                <div class="flex flex-wrap gap-1">
                                    @foreach (var permission in role.Permissions.Take(3))
                                    {
                                        <span class="inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-gray-100 text-gray-800">
                                            @permission
                                        </span>
                                    }
                                    @if (role.Permissions.Count > 3)
                                    {
                                        <span class="inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-gray-200 text-gray-600">
                                            +@(role.Permissions.Count - 3) more
                                        </span>
                                    }
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                @DateTime.Now.AddDays(-new Random().Next(1, 30)).ToString("MMM dd, yyyy")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <div class="flex items-center justify-end space-x-2">
                                    <a href="/Admin/Roles/Edit/@role.Id" 
                                       class="bg-green-50 hover:bg-green-100 text-green-700 p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-green-300 inline-flex items-center" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button onclick="managePermissions('@role.Id', '@role.Name')" 
                                            class="bg-blue-50 hover:bg-blue-100 text-blue-700 p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-300" title="Manage Permissions">
                                        <i class="fas fa-key"></i>
                                    </button>
                                    @{
                                        var name = role.Name ?? string.Empty;
                                        var isProtected = string.Equals(name, "SuperAdmin", StringComparison.OrdinalIgnoreCase) || string.Equals(name, "Member", StringComparison.OrdinalIgnoreCase);
                                    }
                                    @if (!isProtected)
                                    {
                                        <button onclick="confirmDelete('@role.Id', '@role.Name')" 
                                                class="bg-red-50 hover:bg-red-100 text-red-700 p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-red-300" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                        <form id="delete-form-@role.Id" method="post" action="?handler=Delete" style="display:none;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@role.Id" />
                                        </form>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    // Delete confirmation with SweetAlert
    function confirmDelete(roleId, roleName) {
        Swal.fire({
            title: 'Delete Role?',
            html: `Are you sure you want to delete the role <strong>${roleName}</strong>?<br><br>This action cannot be undone.`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#dc2626',
            cancelButtonColor: '#6b7280',
            confirmButtonText: '<i class="fas fa-trash mr-2"></i>Yes, Delete',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                // Submit the delete form
                document.getElementById('delete-form-' + roleId).submit();
            }
        });
    }

    // Placeholder for manage permissions (to be implemented)
    function managePermissions(roleId, roleName) {
        Swal.fire({
            title: 'Manage Permissions',
            text: `Permission management for ${roleName} will be implemented here.`,
            icon: 'info',
            confirmButtonText: 'OK'
        });
    }
</script>




